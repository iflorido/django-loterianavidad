import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Datos de entrenamiento
X1 = np.array([6.5, 8.5, 7.5, 6, 6.2, 8, 5, 10, 9.5, 5.5]).reshape(-1, 1)
X2 = np.array([18, 20, 10, 15, 15, 18, 8, 25, 25, 10]).reshape(-1, 1)
Y = np.array([140, 150, 130, 120, 125, 135, 100, 150, 150, 110])

# Datos de prueba
X1_test = np.array([7, 9, 8]).reshape(-1, 1)
X2_test = np.array([17, 22, 12]).reshape(-1, 1)
Y_test = np.array([145, 155, 135])

# Modelo de regresión lineal simple
model_simple = LinearRegression().fit(X1, Y)
Y_pred_simple = model_simple.predict(X1_test)

# Modelo de regresión lineal múltiple
X_multi = np.concatenate((X1, X2), axis=1)
model_multi = LinearRegression().fit(X_multi, Y)
X_multi_test = np.concatenate((X1_test, X2_test), axis=1)
Y_pred_multi = model_multi.predict(X_multi_test)

# Evaluación de los modelos
mse_simple = mean_squared_error(Y_test, Y_pred_simple)
mse_multi = mean_squared_error(Y_test, Y_pred_multi)

print("Error cuadrático medio (MSE) del modelo simple:", mse_simple)
print("Error cuadrático medio (MSE) del modelo múltiple:", mse_multi)
